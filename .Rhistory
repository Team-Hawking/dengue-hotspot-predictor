my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(data=1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(my_matrix, patients)
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
x <- c("a", "b", "c", "d")
for (e in x) {
print(e)
}
x <- c("a", "b", "c", "d")
for (e in seq_len(x)) {
print(e)
}
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(class, flags)
cls_vect <- sapply(flags, class)
class(cls_vect)
flags$orange
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(sum, flag_colors)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_net <- sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
head(shape_mat)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lappy(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lappy(unique_vals, function(elem){ elem[2] })
lapply(unique_vals, function(elem){ elem[2] })
swirl()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data(iris)
?iris
iris
lapply(iris$Sepal.Length, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
rowMeans(iris[,1:4])
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
headmtcars)
head(mtcars)
sapply(mtcars, cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
colnames(mtcars)
tapply(mtcars$hp, mtcars$mpg, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)[1]
data<-tapply(mtcars$hp, mtcars$cyl, mean)
data$8-data$4
data<-tapply(mtcars$hp, mtcars$cyl, mean)
data[3]-data[1]
debug(ls)
ls
debug(ls)
ls
ls
apply()
apply(mtcars, 2, mean)
?str
str(mean)
asd
data("mtcars")
mtcars
head(mtcars)
?plot
class(mtcars)
mtcars$mpg
plot(mtcars$mpg, mtcars$cyl)
plot(mtcars$cyl, mtcars$mpg)
plot(mtcars$cyl, mtcars$hp)
plot(mtcars$hp, mtcars$cyl)
library(datasets)
with(airquality, plot(Wind, Ozone))
colnames(airquality)
with(airquality, plot(Wind, Solar.R))
?subset
with(airquality, plot(Wind, Solar.R))
model <- lm(Solar.R ~ Wind, airquality)
abline(model)
model <- lm(Wind ~ Solar.R airquality)
model <- lm(Wind ~ Solar.R,airquality)
abline(model)
model <- lm(Wind ~ Solar.R,airquality)
abline(model)
?abline
?lm
swirl()
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
install_from_swirl("Exploratory Data Analysis")
install_from_swirl("Exploratory Data Analysis")
swirl()
library(swirl)
swirl()
head(ppollution)
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col="blue")
abline(h = 12)
hist(ppm, col="green")
rug(ppm)
head(high)
low
high
hist(ppm, col="green", 100)
rug(ppm)
hist(ppm, col="green")
abline(v = 12, lwd = 2)
abline(v=median(ppm), col="magenta", lwd=4)
colnames(ppm)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg, col="wheat", "Number of Counties in Each Region")
barplot(reg, col="wheat", main="Number of Counties in Each Region")
boxplot(pm25 ~ region)
boxplot(pollution$pm25 ~ pollution$region)
boxplot(pm25 ~ region, data=pollution, col="red")
par(mfrow=c(2,1), mar=c(4,4,2,1))
east <- subset(pollution, region=="east")
head(east)
hist(pm25, col="green")
hist(east$pm25, col="green")
hist(subset(pollution, region=="west"),col="green")
hist(subset(pollution$pm25, region=="west"),col="green")
names(pollution)
hist(subset(pollution$pm25, pollution$region=="west"),col="green")
hist(subset(pollution, region=="west")$pm25,col="green")
with(pollution, plot(pm25, region))
with(pollution, plot(latitude, pm25))
abline(h = 12, lwd=2, lty=2)
plot(pollution$latitude, ppm, col=pollution$region)
abline(lwd=2, lty=2)
abline(h=12,lwd=2, lty=2)
par(mfrow=c(1,2), mar=c(5,4,2,1))
west <- subset(pollution, region=="west")
plot(west$latitude, west$pm25, main="West")
plot(east$latitude, east$pm25, main="East")
?Dvices
?Devices
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.copy(png, "geyserplot.png")
dev.copy(png, file="geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed, cars$dist, "SWIRL rules!"))
text(mean(cars$speed), mean(cars$dist), "SWIRL rules!")
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data=state, layout=c(4,1))
xyplot(Life.Exp ~ Income | region, data=state, layout=c(2,2))
head(mpg)
dim(mpg)
mpg$model
table(mpg$model)
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$Ozone, na.rm=TRUE)
hist(airquality$Ozone)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
hist(airquality$Ozone)
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title(main="Ozone and
| Wind in New York City")
title(main="Ozone and Wind in New York City")
ihk
with(airquality, plot(Ozone, Wind))
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
length(par())
names(par())
?par
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type="h")
plot(airquality$Wind,type="n", airquality$Ozone)
title(main="Wind and Ozone in NYC")
may <- subset(airquality, number == 5)
names(airquality)
may <- subset(airquality, month.abb == 5)
may <- subset(airquality, Month == 5)
plot(Wind, Ozone, )
plot(Wind, Ozone, col=1)
with(airquality, plot(Wind, Ozone))
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay
notmay <- subset(airquality, Month != 5)
plot()
points(may$Wind,may$Ozone,col="blue",pch=17)
points(notmay$Wind,notmay$Ozone,col="red",pch=8
)
points(may$Wind,may$Ozone,col="blue",pch=17)
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months")).
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months")).
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v=median(airquality$Wind),lty=2,lwd=2)
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
par(mfrow=c(1,2))
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar =
| c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
par(mfrow = c(1, 3), mar=c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
par(mfrow = c(1, 3), mar=c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation").
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation").
title("Ozone and Temperature")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
title("Ozone and Weather in New York City")
mtext("Ozone and Weather in New York City", outer = TRUE)
library(swirl())
swirl()
install_from_swirl("Statistical Inference")
install_from_swirl("Statistical Inference")
getwd()
install_from_swirl("Statistical Inference")
swirl()
1
2
11/12
deck
52
4/52
1/52
0
12/52
3/51
2/51
library(swirl())
ls
swirl()
1
3/5
16/25
16/25
mypdf()
mypdf
integrate(0,1.6)
integrate(mypdf(0,1.6))
integrate(mypdf(lower=0,upper=1.6))
integrate(mypdf(),lower=0,upper=1.6)
integrate(mypdf,lower=0,upper=1.6)
x^2/8
sqrt(2)
swirl()
swirl()
swirl()
swirl()
0.5*1.6*0.8
0.64
mypdf
integrate(mypdf, 0,1.6)
x^2/8
sqrt(2)
swirl()
library(swirl())
ls()
rm(list=ls())
swirl()
0.997 * .001
(1-0.997) * (1-0.001)
(1-0.985) * (1-0.001)
(1-0.997) * (1-0.001)
(.997*.001) / (.997*.001 + .015*.999)
1/6*(1+2+3+4+5+6)
expect_dice()
expect_dice
dice_high
expect_dice(dice_high)
dice_low
expect_dice(dice_low)
.5 * (edh + edl)
integrate(myfunc, 0, 2)
spop
mean(spop)
allsam
apply(allsam, 1, mean)
mean(smeans)
swirl()
swirl()
rm(list=ls())
swirl()
1
swirl()
setwd("~/github/team-hawking/dengue-hotspot-predictor")
ls
ls()
files()
# loading dataset of US state temperature
data <-read.csv("datasets/earth-surface-temperature-data0.csv")
View(data)
summary(data)
table(data)
gissdata <- read.csv("datasets/giss-101.csv")
summary(gissdata)
table(gissdata)
gissdata <- read.csv("datasets/giss-101.csv")
dat <- readLines("datasets/giss-101.csv");
dat
gissdata <- read.csv("datasets/giss-101.csv", skip=1)
summary(gissdata)
table(gissdata)
View(gissdata)
summary(gissdata])
summary(gissdata)
table(gissdata)
?subset
gissdata <- subset(gissdata, Year > 2000)
View(gissdata)
gissdata <- read.csv("datasets/giss-101.csv", skip=1)
summary(gissdata)
table(gissdata)
gissdata <- subset(gissdata, Year >= 2000)
View(gissdata)
plot(gissdata$Year, gissdata$Jan)
hist(gissdata$Year, gissdata$Jan)
hist(gissdata$Jan, gissdata$Year)
barplot(gissdata$Year, gissdata$Jan)
plot(gissdata$Year, gissdata$Jan)
model <- lm(gissdata$Jan, gissdata$Year)
model <- lm(gissdata$Jan ~ gissdata$Year)
model
plot(model)
gissdata <- read.csv("datasets/giss-101.csv", skip=1)
summary(gissdata)
table(gissdata)
gissdata <- subset(gissdata, Year >= 2000)
head(gissdata)
model <- lm(gissdata$Jan ~ gissdata$Year)
plot(y,x,col = "blue",main = "Height & Weight Regression",
abline(lm(x~y)),cex = 1.3,pch = 16,xlab = "Weight in Kg",ylab = "Height in cm")
boxplot(gissdata$Jan)
?boxplot
?par
par(c(2,2))
boxplot(gissdata$Jan)
boxplot(gissdata$Feb)
boxplot(gissdata$Mar)
boxplot(gissdata$April)
par(c(2,2))
boxplot(gissdata$Jan)
boxplot(gissdata$Feb)
boxplot(gissdata$Mar)
boxplot(gissdata$April)
par(c(2,2))
boxplot(!is.na(gissdata$Jan))
boxplot(!is.na(gissdata$Feb))
boxplot(!is.na(gissdata$Mar))
boxplot(!is.na(gissdata$April))
View(gissdata)
par(mfrow=c(2,2))
boxplot(!is.na(gissdata$Jan))
boxplot(!is.na(gissdata$Feb))
boxplot(!is.na(gissdata$Mar))
boxplot(!is.na(gissdata$April))
boxplot(gissdata$Jan)
boxplot(gissdata$Feb)
boxplot(gissdata$Mar)
boxplot(gissdata$April)
?boxplot
boxplot(gissdata$Jan)
boxplot(gissdata$Feb)
boxplot(gissdata$Mar)
boxplot(gissdata$April)
summar(gissdata$Apr)
boxplot(gissdata$Jan)
boxplot(gissdata$Feb)
boxplot(gissdata$Mar)
boxplot(gissdata$Apr)
names(gissdata)
boxplot(gissdata$Jan)
boxplot(gissdata$Feb)
boxplot(gissdata$Mar)
boxplot(gissdata$Apr)
boxplot(gissdata$May)
boxplot(gissdata$Jun)
boxplot(gissdata$Jul)
boxplot(gissdata$Aug)
boxplot(gissdata$Sep)
boxplot(gissdata$Oct)
boxplot(gissdata$Nov)
boxplot(gissdata$Dec)
par(mfrow=c(3,4))
boxplot(gissdata$Jan)
boxplot(gissdata$Feb)
boxplot(gissdata$Mar)
boxplot(gissdata$Apr)
boxplot(gissdata$May)
boxplot(gissdata$Jun)
boxplot(gissdata$Jul)
boxplot(gissdata$Aug)
boxplot(gissdata$Sep)
boxplot(gissdata$Oct)
boxplot(gissdata$Nov)
boxplot(gissdata$Dec)
par(mfrow=c(3,4))
boxplot(gissdata$Jan)
boxplot(gissdata$Feb)
boxplot(gissdata$Mar)
boxplot(gissdata$Apr)
boxplot(gissdata$May)
boxplot(gissdata$Jun)
boxplot(gissdata$Jul)
boxplot(gissdata$Aug)
boxplot(gissdata$Sep)
boxplot(gissdata$Oct)
boxplot(gissdata$Nov)
boxplot(gissdata$Dec)
names(gissdata)
boxplot(gissdata$Jan)
boxplot(gissdata$Feb)
boxplot(gissdata$Mar)
boxplot(gissdata$Apr)
boxplot(gissdata$May)
boxplot(gissdata$Jun)
boxplot(gissdata$Jul)
boxplot(gissdata$Aug)
boxplot(gissdata$Sep)
par(mfrow=c(3,4))
par(mfrow=c(3,4))
boxplot(gissdata$Jan)
boxplot(gissdata$Feb)
boxplot(gissdata$Mar)
boxplot(gissdata$Apr)
boxplot(gissdata$May)
boxplot(gissdata$Jun)
boxplot(gissdata$Jul)
boxplot(gissdata$Aug)
boxplot(gissdata$Sep)
boxplot(gissdata$Oct)
boxplot(gissdata$Nov)
boxplot(gissdata$Dec)
boxplot(gissdata$Jan)
boxplot(gissdata$Mar)
str(gissdata)
gissdata$Sep <- numeric(gissdata$Sep)
